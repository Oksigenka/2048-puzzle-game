{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ class $a5fd07fa01589658$var$Game {\n    /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ constructor(initialState){\n        this.score = 0;\n        this.scoreVal = document.querySelector(\".game-score\");\n        this.field = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.arr = this.field.map((row)=>[\n                ...row\n            ]);\n    }\n    shiftLeft() {\n        let empty = -1;\n        for(let i = 0; i < 4; i++){\n            empty = -1;\n            for(let j = 0; j < 4; j++){\n                if (this.field[i][j] === 0 && empty === -1) empty = j;\n                else if (this.field[i][j] !== 0 && empty !== -1) {\n                    this.field[i][empty] = this.field[i][j];\n                    this.field[i][j] = 0;\n                    empty++;\n                }\n            }\n        }\n    }\n    moveLeft() {\n        this.shiftLeft();\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 3; j++)if (this.field[i][j] !== 0 && this.field[i][j] === this.field[i][j + 1]) {\n                const newVal = this.field[i][j] * 2;\n                this.field[i][j] = newVal;\n                this.field[i][j + 1] = 0;\n                this.score += newVal;\n                this.getScore();\n            }\n        }\n        this.shiftLeft();\n    }\n    shiftRight() {\n        let empty = -1;\n        for(let i = 0; i < 4; i++){\n            empty = -1;\n            for(let j = 3; j >= 0; j--){\n                if (this.field[i][j] === 0 && empty === -1) empty = j;\n                else if (this.field[i][j] !== 0 && empty !== -1) {\n                    this.field[i][empty] = this.field[i][j];\n                    this.field[i][j] = 0;\n                    empty--;\n                }\n            }\n        }\n    }\n    moveRight() {\n        this.shiftRight();\n        for(let i = 0; i < 4; i++){\n            for(let j = 3; j >= 0; j--)if (this.field[i][j] !== 0 && this.field[i][j] === this.field[i][j - 1]) {\n                const newVal = this.field[i][j] * 2;\n                this.field[i][j] = newVal;\n                this.field[i][j - 1] = 0;\n                this.score += newVal;\n                this.getScore();\n            }\n        }\n        this.shiftRight();\n    }\n    shiftUp() {\n        for(let j = 0; j < 4; j++){\n            let empty = -1;\n            for(let i = 0; i < 4; i++){\n                if (this.field[i][j] === 0 && empty === -1) empty = i;\n                else if (this.field[i][j] !== 0 && empty !== -1) {\n                    if (i !== empty) {\n                        this.field[empty][j] = this.field[i][j];\n                        this.field[i][j] = 0;\n                        empty++;\n                    }\n                }\n            }\n        }\n    }\n    moveUp() {\n        this.shiftUp();\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 3; j++)if (this.field[j][i] !== 0 && this.field[j][i] === this.field[j + 1][i]) {\n                const newVal = this.field[j][i] * 2;\n                this.field[j][i] = newVal;\n                this.field[j + 1][i] = 0;\n                this.score += newVal;\n            }\n        }\n        this.shiftUp();\n    }\n    shiftDown() {\n        let empty = -1;\n        for(let i = 0; i < 4; i++){\n            empty = -1;\n            for(let j = 3; j >= 0; j--){\n                if (this.field[j][i] === 0 && empty === -1) empty = j;\n                else if (this.field[j][i] !== 0 && empty !== -1) {\n                    this.field[empty][i] = this.field[j][i];\n                    this.field[j][i] = 0;\n                    empty--;\n                }\n            }\n        }\n    }\n    moveDown() {\n        this.shiftDown();\n        for(let i = 0; i < 4; i++){\n            for(let j = 3; j > 0; j--)if (this.field[j][i] !== 0 && this.field[j][i] === this.field[j - 1][i]) {\n                const newVal = this.field[j][i] * 2;\n                this.field[j][i] = newVal;\n                this.field[j - 1][i] = 0;\n                this.score += newVal;\n                this.getScore();\n            }\n        }\n        this.shiftDown();\n    }\n    /**\n   * @returns {number}\n   */ getScore() {\n        this.scoreVal.textContent = this.score;\n        return this.score;\n    }\n    /**\n   * @returns {number[][]}\n   */ getState() {\n        return this.field;\n    }\n    /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ getStatus() {\n        let emptyField = true;\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (this.field[i][j] !== 0) emptyField = false;\n        }\n        if (emptyField) return \"idle\";\n        if (this.winerGame()) return \"win\";\n        if (!this.canMove()) return \"lose\";\n        return \"playing\";\n    }\n    /**\n   * Starts the game.\n   */ start() {\n        this.generateCell();\n    }\n    /**\n   * Resets the game.\n   */ restart() {\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++)this.field[i][j] = 0;\n        this.generateCell();\n        this.generateCell();\n        this.score = 0;\n        this.getScore();\n    }\n    // Add your own methods here\n    generateCell() {\n        const emptyCells = [];\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (this.field[i][j] === 0) emptyCells.push({\n                x: i,\n                y: j\n            });\n        }\n        if (emptyCells.length > 0) {\n            const { x: x, y: y } = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n            if (this.field[x][y] === 0) this.field[x][y] = Math.random() < 0.9 ? 2 : 4;\n        }\n    }\n    canMove() {\n        let game = false;\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 3; j++){\n                if (this.field[j][i] === 0) game = true;\n                if (this.field[j][i] !== 0) {\n                    if (this.field[j][i] === this.field[j + 1][i] || this.field[i][j] === this.field[i][j + 1]) game = true;\n                }\n            }\n            for(let j = 3; j > 0; j--){\n                if (this.field[j][i] === 0) game = true;\n                if (this.field[j][i] !== 0) {\n                    if (this.field[j][i] === this.field[j - 1][i] || this.field[i][j] === this.field[i][j - 1]) game = true;\n                }\n            }\n        }\n        return game;\n    }\n    winerGame() {\n        let win = false;\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (this.field[i][j] === 2048) win = true;\n        }\n        return win;\n    }\n    isMoveMade(previousField) {\n        const moved = previousField !== JSON.stringify(this.field);\n        return moved;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$messageLose = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$messageWin = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$messageStart = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$table = document.querySelector(\".game-field\");\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".start\");\nfunction $09e991522ca7e64e$var$keyMove(ev) {\n    const previousField = JSON.stringify($09e991522ca7e64e$var$game.getState());\n    switch(ev.key){\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n        default:\n            return;\n    }\n    if ($09e991522ca7e64e$var$game.isMoveMade(previousField)) $09e991522ca7e64e$var$game.generateCell();\n    $09e991522ca7e64e$var$game.getStatus();\n    $09e991522ca7e64e$var$game.getScore();\n    $09e991522ca7e64e$var$vizualized();\n    $09e991522ca7e64e$var$game.scoreVal.textContent = $09e991522ca7e64e$var$game.score;\n}\nfunction $09e991522ca7e64e$var$vizStart() {\n    $09e991522ca7e64e$var$game.start();\n    $09e991522ca7e64e$var$startButton.textContent = \"Restart\";\n    $09e991522ca7e64e$var$startButton.style.fontSize = \"17px\";\n    $09e991522ca7e64e$var$startButton.addEventListener(\"mouseenter\", ()=>{\n        $09e991522ca7e64e$var$startButton.style.backgroundColor = \"#f87474\";\n    });\n    $09e991522ca7e64e$var$startButton.addEventListener(\"mouseleave\", ()=>{\n        $09e991522ca7e64e$var$startButton.style.backgroundColor = \"#f1b2b2\";\n    });\n    $09e991522ca7e64e$var$messageStart.style.display = \"none\";\n}\nfunction $09e991522ca7e64e$var$vizRestart() {\n    $09e991522ca7e64e$var$game.restart();\n    $09e991522ca7e64e$var$messageWin.style.display = \"none\";\n    $09e991522ca7e64e$var$messageLose.style.display = \"none\";\n    $09e991522ca7e64e$var$vizualized();\n}\nfunction $09e991522ca7e64e$var$vizualized() {\n    for(let i = 0; i < 4; i++){\n        for(let j = 0; j < 4; j++)if ($09e991522ca7e64e$var$game.field[i][j] === 0) $09e991522ca7e64e$var$table.rows[i].cells[j].textContent = \"\";\n        else $09e991522ca7e64e$var$table.rows[i].cells[j].textContent = $09e991522ca7e64e$var$game.field[i][j];\n    }\n    $09e991522ca7e64e$var$colorCells();\n    if (!$09e991522ca7e64e$var$game.canMove()) $09e991522ca7e64e$var$messageLose.style.display = \"block\";\n    if ($09e991522ca7e64e$var$game.winerGame()) $09e991522ca7e64e$var$messageWin.style.display = \"block\";\n}\nfunction $09e991522ca7e64e$var$colorCells() {\n    const cells = document.querySelectorAll(\".field-cell\");\n    cells.forEach((cell)=>{\n        const value = parseInt(cell.textContent, 10);\n        cell.className = \"field-cell\";\n        if (value > 0) cell.classList.add(`field-cell--${value}`);\n    });\n}\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$startButton.textContent === \"Start\") {\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$vizStart();\n        $09e991522ca7e64e$var$startButton.classList.remove(\"start\");\n        $09e991522ca7e64e$var$startButton.classList.add(\"restart\");\n        $09e991522ca7e64e$var$startButton.textContent = \"Restart\";\n    } else if ($09e991522ca7e64e$var$startButton.textContent === \"Restart\") {\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$vizRestart();\n    }\n    document.addEventListener(\"keydown\", $09e991522ca7e64e$var$keyMove);\n    $09e991522ca7e64e$var$vizualized();\n});\n\n\n//# sourceMappingURL=index.22281a40.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst table = document.querySelector('.game-field');\nconst startButton = document.querySelector('.start');\n\nfunction keyMove(ev) {\n  const previousField = JSON.stringify(game.getState());\n\n  switch (ev.key) {\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    default:\n      return;\n  }\n\n  if (game.isMoveMade(previousField)) {\n    game.generateCell();\n  }\n\n  game.getStatus();\n  game.getScore();\n  vizualized();\n  game.scoreVal.textContent = game.score;\n}\n\nfunction vizStart() {\n  game.start();\n\n  startButton.textContent = 'Restart';\n  startButton.style.fontSize = '17px';\n\n  startButton.addEventListener('mouseenter', () => {\n    startButton.style.backgroundColor = '#f87474';\n  });\n\n  startButton.addEventListener('mouseleave', () => {\n    startButton.style.backgroundColor = '#f1b2b2';\n  });\n\n  messageStart.style.display = 'none';\n}\n\nfunction vizRestart() {\n  game.restart();\n\n  messageWin.style.display = 'none';\n  messageLose.style.display = 'none';\n  vizualized();\n}\n\nfunction vizualized() {\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (game.field[i][j] === 0) {\n        table.rows[i].cells[j].textContent = '';\n      } else {\n        table.rows[i].cells[j].textContent = game.field[i][j];\n      }\n    }\n  }\n\n  colorCells();\n\n  if (!game.canMove()) {\n    messageLose.style.display = 'block';\n  }\n\n  if (game.winerGame()) {\n    messageWin.style.display = 'block';\n  }\n}\n\nfunction colorCells() {\n  const cells = document.querySelectorAll('.field-cell');\n\n  cells.forEach((cell) => {\n    const value = parseInt(cell.textContent, 10);\n\n    cell.className = 'field-cell';\n\n    if (value > 0) {\n      cell.classList.add(`field-cell--${value}`);\n    }\n  });\n}\n\nstartButton.addEventListener('click', () => {\n  if (startButton.textContent === 'Start') {\n    game.start();\n    vizStart();\n\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n  } else if (startButton.textContent === 'Restart') {\n    game.restart();\n    vizRestart();\n  }\n\n  document.addEventListener('keydown', keyMove);\n\n  vizualized();\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    this.score = 0;\n    this.scoreVal = document.querySelector('.game-score');\n\n    this.field = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.arr = this.field.map((row) => [...row]);\n  }\n\n  shiftLeft() {\n    let empty = -1;\n\n    for (let i = 0; i < 4; i++) {\n      empty = -1;\n\n      for (let j = 0; j < 4; j++) {\n        if (this.field[i][j] === 0 && empty === -1) {\n          empty = j;\n        } else if (this.field[i][j] !== 0 && empty !== -1) {\n          this.field[i][empty] = this.field[i][j];\n          this.field[i][j] = 0;\n          empty++;\n        }\n      }\n    }\n  }\n\n  moveLeft() {\n    this.shiftLeft();\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (\n          this.field[i][j] !== 0\n          && this.field[i][j] === this.field[i][j + 1]\n        ) {\n          const newVal = this.field[i][j] * 2;\n\n          this.field[i][j] = newVal;\n          this.field[i][j + 1] = 0;\n\n          this.score += newVal;\n          this.getScore();\n        }\n      }\n    }\n\n    this.shiftLeft();\n  }\n\n  shiftRight() {\n    let empty = -1;\n\n    for (let i = 0; i < 4; i++) {\n      empty = -1;\n\n      for (let j = 3; j >= 0; j--) {\n        if (this.field[i][j] === 0 && empty === -1) {\n          empty = j;\n        } else if (this.field[i][j] !== 0 && empty !== -1) {\n          this.field[i][empty] = this.field[i][j];\n          this.field[i][j] = 0;\n          empty--;\n        }\n      }\n    }\n  }\n\n  moveRight() {\n    this.shiftRight();\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 3; j >= 0; j--) {\n        if (\n          this.field[i][j] !== 0\n          && this.field[i][j] === this.field[i][j - 1]\n        ) {\n          const newVal = this.field[i][j] * 2;\n\n          this.field[i][j] = newVal;\n          this.field[i][j - 1] = 0;\n\n          this.score += newVal;\n          this.getScore();\n        }\n      }\n    }\n\n    this.shiftRight();\n  }\n\n  shiftUp() {\n    for (let j = 0; j < 4; j++) {\n      let empty = -1;\n\n      for (let i = 0; i < 4; i++) {\n        if (this.field[i][j] === 0 && empty === -1) {\n          empty = i;\n        } else if (this.field[i][j] !== 0 && empty !== -1) {\n          if (i !== empty) {\n            this.field[empty][j] = this.field[i][j];\n            this.field[i][j] = 0;\n            empty++;\n          }\n        }\n      }\n    }\n  }\n\n  moveUp() {\n    this.shiftUp();\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (\n          this.field[j][i] !== 0\n          && this.field[j][i] === this.field[j + 1][i]\n        ) {\n          const newVal = this.field[j][i] * 2;\n\n          this.field[j][i] = newVal;\n          this.field[j + 1][i] = 0;\n\n          this.score += newVal;\n        }\n      }\n    }\n\n    this.shiftUp();\n  }\n\n  shiftDown() {\n    let empty = -1;\n\n    for (let i = 0; i < 4; i++) {\n      empty = -1;\n\n      for (let j = 3; j >= 0; j--) {\n        if (this.field[j][i] === 0 && empty === -1) {\n          empty = j;\n        } else if (this.field[j][i] !== 0 && empty !== -1) {\n          this.field[empty][i] = this.field[j][i];\n          this.field[j][i] = 0;\n          empty--;\n        }\n      }\n    }\n  }\n\n  moveDown() {\n    this.shiftDown();\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 3; j > 0; j--) {\n        if (\n          this.field[j][i] !== 0\n          && this.field[j][i] === this.field[j - 1][i]\n        ) {\n          const newVal = this.field[j][i] * 2;\n\n          this.field[j][i] = newVal;\n          this.field[j - 1][i] = 0;\n\n          this.score += newVal;\n          this.getScore();\n        }\n      }\n    }\n\n    this.shiftDown();\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    this.scoreVal.textContent = this.score;\n\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.field;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n\n  getStatus() {\n    let emptyField = true;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.field[i][j] !== 0) {\n          emptyField = false;\n        }\n      }\n    }\n\n    if (emptyField) {\n      return 'idle';\n    }\n\n    if (this.winerGame()) {\n      return 'win';\n    }\n\n    if (!this.canMove()) {\n      return 'lose';\n    }\n\n    return 'playing';\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.generateCell();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.field[i][j] = 0;\n      }\n    }\n\n    this.generateCell();\n    this.generateCell();\n\n    this.score = 0;\n    this.getScore();\n  }\n\n  // Add your own methods here\n  generateCell() {\n    const emptyCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.field[i][j] === 0) {\n          emptyCells.push({\n            x: i, y: j,\n          });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const { x, y }\n        = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      if (this.field[x][y] === 0) {\n        this.field[x][y] = Math.random() < 0.9 ? 2 : 4;\n      }\n    }\n  }\n\n  canMove() {\n    let game = false;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (this.field[j][i] === 0) {\n          game = true;\n        }\n\n        if (this.field[j][i] !== 0) {\n          if (\n            this.field[j][i] === this.field[j + 1][i]\n            || this.field[i][j] === this.field[i][j + 1]\n          ) {\n            game = true;\n          }\n        }\n      }\n\n      for (let j = 3; j > 0; j--) {\n        if (this.field[j][i] === 0) {\n          game = true;\n        }\n\n        if (this.field[j][i] !== 0) {\n          if (\n            this.field[j][i] === this.field[j - 1][i]\n            || this.field[i][j] === this.field[i][j - 1]\n          ) {\n            game = true;\n          }\n        }\n      }\n    }\n\n    return game;\n  }\n\n  winerGame() {\n    let win = false;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.field[i][j] === 2048) {\n          win = true;\n        }\n      }\n    }\n\n    return win;\n  }\n\n  isMoveMade(previousField) {\n    const moved = previousField !== JSON.stringify(this.field);\n\n    return moved;\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$09e991522ca7e64e$var$game","constructor","initialState","score","scoreVal","document","querySelector","field","arr","map","row","shiftLeft","empty","i","j","moveLeft","newVal","getScore","shiftRight","moveRight","shiftUp","moveUp","shiftDown","moveDown","textContent","getState","getStatus","emptyField","winerGame","canMove","start","generateCell","restart","emptyCells","push","x","y","length","Math","floor","random","game","win","isMoveMade","previousField","JSON","stringify","$09e991522ca7e64e$var$messageLose","$09e991522ca7e64e$var$messageWin","$09e991522ca7e64e$var$messageStart","$09e991522ca7e64e$var$table","$09e991522ca7e64e$var$startButton","$09e991522ca7e64e$var$keyMove","ev","key","$09e991522ca7e64e$var$vizualized","rows","cells","querySelectorAll","forEach","cell","value","parseInt","className","classList","add","style","display","addEventListener","fontSize","backgroundColor","remove"],"version":3,"file":"index.22281a40.js.map"}